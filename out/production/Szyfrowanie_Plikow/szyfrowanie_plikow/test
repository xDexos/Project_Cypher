import java.io.*;
import java.nio.file.*;
import java.util.*;
import java.util.concurrent.*;

class MyClass {
    String path;

    MyClass(String path) {
        this.path = path;
    }

    void printFileContent() throws IOException {
        System.out.println(new String(Files.readAllBytes(Paths.get(path))));
    }
}

class MyClassHandler {
    private List<MyClass> list;
    private int currentIndex = 0;

    MyClassHandler(List<MyClass> objects) {
        this.list = new ArrayList<>(objects);
    }

    synchronized MyClass getNextObject() {
        return currentIndex < list.size() ? list.get(currentIndex++) : null;
    }

    void processFiles() {
        ExecutorService executor = Executors.newFixedThreadPool(5);
        for (int i = 0; i < 5; i++) {
            executor.submit(() -> {
                try {
                    while (true) {
                        MyClass object = getNextObject();
                        if (object == null) break;
                        object.printFileContent();
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            });
        }
        executor.shutdown();
    }
}
